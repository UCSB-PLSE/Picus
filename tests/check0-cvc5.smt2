(set-logic QF_FF)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(define-sort F () (_ FiniteField 21888242871839275222246405745257275088548364400416034343698204186575808495617))
; ================================
; ======== original block ========
; ================================
; ======== declaration constraints ========
(declare-const x0 F)
(declare-const x1 F)
(declare-const x2 F)
(declare-const x3 F)
(declare-const x4 F)
(declare-const x5 F)
(declare-const x6 F)
(declare-const x7 F)
(declare-const x8 F)
(declare-const x9 F)
(declare-const x10 F)
; ======== p definitions ========
(declare-const p F)
(assert (= p #f21888242871839275222246405745257275088548364400416034343698204186575808495617m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps1 F)
(assert (= ps1 #f21888242871839275222246405745257275088548364400416034343698204186575808495616m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps2 F)
(assert (= ps2 #f21888242871839275222246405745257275088548364400416034343698204186575808495615m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps3 F)
(assert (= ps3 #f21888242871839275222246405745257275088548364400416034343698204186575808495614m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps4 F)
(assert (= ps4 #f21888242871839275222246405745257275088548364400416034343698204186575808495613m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps5 F)
(assert (= ps5 #f21888242871839275222246405745257275088548364400416034343698204186575808495612m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const zero F)
(assert (= zero #f0m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const one F)
(assert (= one #f0m21888242871839275222246405745257275088548364400416034343698204186575808495617))
; ======== main constraints ========
(assert (= (ff.mul ps1 (ff.mul x3 x6)) (ff.mul ps1 x7)))
(assert (= (ff.mul ps1 (ff.mul x4 x5)) (ff.mul ps1 x8)))
(assert (= (ff.add (ff.mul #f168700m21888242871839275222246405745257275088548364400416034343698204186575808495617 (ff.mul x3 x5)) (ff.add (ff.mul #f168700m21888242871839275222246405745257275088548364400416034343698204186575808495617 (ff.mul x3 x6)) (ff.add (ff.mul ps1 (ff.mul x4 x5)) (ff.mul ps1 (ff.mul x4 x6))))) (ff.mul ps1 x9)))
(assert (= (ff.mul ps1 (ff.mul x7 x8)) (ff.mul ps1 x10)))
(assert (= (ff.add x1 (ff.mul #f168696m21888242871839275222246405745257275088548364400416034343698204186575808495617 (ff.mul x10 x1))) (ff.add x7 x8)))
(assert (= (ff.add x2 (ff.mul #f21888242871839275222246405745257275088548364400416034343698204186575808326921m21888242871839275222246405745257275088548364400416034343698204186575808495617 (ff.mul x10 x2))) (ff.add (ff.mul #f168700m21888242871839275222246405745257275088548364400416034343698204186575808495617 x7) (ff.add (ff.mul ps1 x8) x9))))
(assert (= one one))
; ====================================
; ======== precondition block ========
; ====================================
; precondition tag: precondition
(assert (= (ff.mul x10 #f168696m21888242871839275222246405745257275088548364400416034343698204186575808495617) #f21888242871839275222246405745257275088548364400416034343698204186575808495616m21888242871839275222246405745257275088548364400416034343698204186575808495617))

(check-sat)
(get-model)