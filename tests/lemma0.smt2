(set-logic QF_FF)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(define-sort F () (_ FiniteField 21888242871839275222246405745257275088548364400416034343698204186575808495617))

(declare-const p F)
(assert (= p #f21888242871839275222246405745257275088548364400416034343698204186575808495617m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const zero F)
(assert (= zero #f0m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const one F)
(assert (= one #f1m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const two F)
(assert (= two #f2m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const three F)
(assert (= three #f3m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const four F)
(assert (= four #f4m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const va F)
(assert (= va #f168700m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const vd F)
(assert (= vd #f168696m21888242871839275222246405745257275088548364400416034343698204186575808495617))


(declare-const x F)

(declare-const a F)
; (assert (not (= a zero)))
; (assert (not (= a one)))
; (assert (not (= a two)))
; (assert (not (= a three)))
; (assert (not (= a four)))
(assert (= a (ff.mul va vd)))

(assert (=
    one
    (ff.mul a (ff.mul x x))
))

(check-sat)
(get-model)